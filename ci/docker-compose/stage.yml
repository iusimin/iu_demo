version: '3'
services:
  # The web backend API server created upon Gunicorn+Gevent+Falcon
  web-backend:
    build: ../../web_backend
    ports:
      - 5000:5000
    volumes:
      - ../../web_backend:/iu/web_backend:ro
      - ../../cl:/iu/cl:ro
      - ../web_backend/stage/server.yml:/etc/server.yml:ro
    environment:
      PYTHONPATH: /iu
    command: ['python', 'server.py']
    stdin_open: true
    tty: true
  # wms-frontend
  vue-frontend:
    build: ../../vue_frontend
    ports:
      - 5080:5080
    volumes:
      - ../../vue_frontend:/iu/vue_frontend:ro
    command: ["http-server", "dist", "-p 5080"]
    stdin_open: true
    tty: true
  # Celery workers entrypoint
  web-backend-worker:
    build: ../../web_backend
    volumes:
      - ../../web_backend:/iu/web_backend:ro
      - ../../cl:/iu/cl:ro
      - ../web_backend/stage/server.yml:/etc/server.yml:ro
      - ../web_backend/stage/worker.yml:/etc/worker.yml:ro
    environment:
      PYTHONPATH: /iu
    command: ['python', 'worker.py']
    stdin_open: true
    tty: true
  # UI to monitor / manage celery workers
  celery-flower:
    build: ../../web_backend
    ports:
      - 8888:8888
    volumes:
      - ../../web_backend:/iu/web_backend:ro
      - ../../cl:/iu/cl:ro
      - ../web_backend/stage/server.yml:/etc/server.yml:ro
    environment:
      PYTHONPATH: /iu
      FLOWER_PORT: 8888
      FLOWER_ADDRESS: 0.0.0.0
    command: ['python', 'celery-flower.py']
    stdin_open: true
    tty: true
  # Mongo DB
  mongodb:
    image: mongo:4.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  # A simple GUI tool for Mongo DB
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
  # Celery Broker with management UI
  rabbitmq:
    image: rabbitmq:3.7-management
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: example
  # Redis for caching and celery backend
  redis:
    image: redis:5.0
    volumes:
      - ../redis/stage/redis.conf:/usr/local/etc/redis/redis.conf:ro
  # Proxy and load balancer
  nginx:
    image: nginx:1.15.9
    volumes:
      - ../nginx/stage/nginx.conf:/etc/nginx/nginx.conf:ro
    command: ['nginx-debug', '-g', 'daemon off;']
    ports:
      - 80:80
  # Nginx for rate limiter
  rate-limiter:
    build: ../../rate_limiter
    volumes:
      - ../rate_limiter/stage/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../rate_limiter:/iu/rate_limiter:ro
      # - ../../rate_limiter/queue_rate.conf:/etc/rate_limiter/queue_rate.conf:ro
      # - ../../rate_limiter/zones.conf:/etc/rate_limiter/zones.conf:ro
    command: ['nginx', '-g', 'daemon off;']